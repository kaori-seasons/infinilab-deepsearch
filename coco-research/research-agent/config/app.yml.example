# Coco AI Research Agent 配置文件示例

# 服务器配置
server:
  port: 8080
  read_timeout: 30s
  write_timeout: 30s

# 数据库配置
database:
  host: localhost
  port: 5432
  user: coco
  password: password
  dbname: coco_research
  sslmode: disable

# Redis配置
redis:
  host: localhost
  port: 6379
  password: ""
  db: 0

# Elasticsearch配置
elasticsearch:
  hosts:
    - http://localhost:9200
  username: ""
  password: ""

# LLM配置
llm:
  # 默认LLM提供商
  provider: openai
  # 默认API密钥（如果各提供商没有单独配置）
  api_key: ""
  
  # OpenAI配置
  openai:
    api_key: "your-openai-api-key"
    base_url: "https://api.openai.com/v1"
    model: "gpt-4"
    max_tokens: 4096
    temperature: 0.7
  
  # Claude配置
  claude:
    api_key: "your-claude-api-key"
    base_url: "https://api.anthropic.com"
    model: "claude-3-sonnet-20240229"
    max_tokens: 4096
    temperature: 0.7
  
  # DeepSeek配置
  deepseek:
    api_key: "your-deepseek-api-key"
    base_url: "https://api.deepseek.com"
    model: "deepseek-chat"
    max_tokens: 4096
    temperature: 0.7
  
  # 嵌入模型配置
  embedding:
    # 使用iic/nlp_corom_sentence-embedding_chinese-base模型
    model: "iic/nlp_corom_sentence-embedding_chinese-base"
    provider: "huggingface"
    api_key: "your-huggingface-api-key"
    base_url: "https://api-inference.huggingface.co"
    max_length: 512
    dimension: 768

# 向量搜索配置
vector_search:
  # 用户兴趣配置
  user_interest:
    cache_ttl: "30m"
    update_interval: "1h"
    max_categories: 5
    confidence_threshold: 0.5
  
  # 混合搜索配置
  hybrid_search:
    vector_weight: 0.4
    text_weight: 0.3
    rerank_weight: 0.3
    max_candidates: 100
    rerank_limit: 20
    similarity_threshold: 0.7
  
  # BGE模型配置
  bge_model:
    model_path: "BAAI/bge-m3"
    device: "cpu"  # cpu, cuda
    batch_size: 32
    max_length: 512
  
  # 重排序配置
  rerank:
    content_relevance_weight: 0.4
    user_preference_weight: 0.3
    freshness_weight: 0.1
    quality_weight: 0.1
    popularity_weight: 0.1
  
  # 缓存配置
  cache:
    default_expiration: "15m"
    cleanup_interval: "5m"
    max_size: 1000

# 日志配置
log:
  level: info
  format: json
  output: stdout 